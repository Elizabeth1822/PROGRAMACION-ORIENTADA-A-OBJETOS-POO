class Producto:
    def __init__(self, id_producto, nombre, cantidad, precio):
        self.id_producto = id_producto
        self.nombre = nombre
        self.cantidad = cantidad
        self.precio = precio

    def set_cantidad(self, cantidad):
        self.cantidad = cantidad

    def set_precio(self, precio):
        self.precio = precio

    def __str__(self):
        return f"ID: {self.id_producto}, Nombre: {self.nombre}, Cantidad: {self.cantidad}, Precio: ${self.precio:.2f}"


class Inventario:
    def __init__(self):
        self.productos = []

    def agregar_producto(self, producto):
        if any(p.id_producto == producto.id_producto for p in self.productos):
            print("‚ö†Ô∏è ¬°El ID del producto ya existe!")
            return
        self.productos.append(producto)
        print("‚úÖ Producto agregado con √©xito.")

    def eliminar_producto(self, id_producto):
        for p in self.productos:
            if p.id_producto == id_producto:
                self.productos.remove(p)
                print("üóëÔ∏è Producto eliminado con √©xito.")
                return
        print("‚ö†Ô∏è Producto no encontrado.")

    def actualizar_producto(self, id_producto, cantidad=None, precio=None):
        for p in self.productos:
            if p.id_producto == id_producto:
                if cantidad is not None:
                    p.set_cantidad(cantidad)
                if precio is not None:
                    p.set_precio(precio)
                print("üîÑ Producto actualizado con √©xito.")
                return
        print("‚ö†Ô∏è Producto no encontrado.")

    def buscar_producto(self, nombre):
        resultados = [p for p in self.productos if nombre.lower() in p.nombre.lower()]
        if resultados:
            print("üîç Resultados de b√∫squeda:")
            for r in resultados:
                print(r)
        else:
            print("‚ö†Ô∏è No se encontraron productos coincidentes.")

    def mostrar_productos(self):
        if not self.productos:
            print("üì¶ No hay productos en el inventario.")
        else:
            print("üìã Lista de productos en inventario:")
            for p in self.productos:
                print(p)


def menu():
    inventario = Inventario()
    while True:
        print("\n=== üì¶ Sistema de Gesti√≥n de Inventario ===")
        print("1. Agregar producto")
        print("2. Eliminar producto")
        print("3. Actualizar producto")
        print("4. Buscar producto")
        print("5. Mostrar todos los productos")
        print("6. Salir")

        opcion = input("Ingrese una opci√≥n: ")

        if opcion == "1":
            pid = input("Ingrese el ID del producto: ")
            nombre = input("Ingrese el nombre del producto: ")
            cantidad = int(input("Ingrese la cantidad: "))
            precio = float(input("Ingrese el precio: "))
            producto = Producto(pid, nombre, cantidad, precio)
            inventario.agregar_producto(producto)

        elif opcion == "2":
            pid = input("Ingrese el ID del producto a eliminar: ")
            inventario.eliminar_producto(pid)

        elif opcion == "3":
            pid = input("Ingrese el ID del producto a actualizar: ")
            cantidad = input("Ingrese una nueva cantidad (o Enter para omitir): ")
            precio = input("Ingrese un nuevo precio (o Enter para omitir): ")
            inventario.actualizar_producto(
                pid,
                int(cantidad) if cantidad else None,
                float(precio) if precio else None
            )

        elif opcion == "4":
            nombre = input("Ingrese el nombre del producto a buscar: ")
            inventario.buscar_producto(nombre)

        elif opcion == "5":
            inventario.mostrar_productos()

        elif opcion == "6":
            print("üëã Saliendo del sistema...")
            break

        else:
            print("‚ö†Ô∏è Opci√≥n no v√°lida. ¬°Int√©ntalo de nuevo!")


if __name__ == "__main__":
    menu()
1


